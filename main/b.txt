Transforming Airfoil Inspection Data: The IBR Knowledge Graph Pilot
Maintaining the integrity of critical engine components like airfoils is paramount for flight safety and operational readiness. Today, Pratt & Whitney and the Air Force manage crucial data from multiple, often disconnected, sources.

The Problem We Are Solving
Pratt & Whitney's advanced inspection tools capture detailed defect data – location, size, type. Separately, sophisticated simulation tools like EagleBlend calculate the precise geometry for potential repairs, generating specifications as JSON data. Engineering rules for managing these defects often exist in text documents. Air Force engineers currently receive this information fragmented across different files.
Manually correlating the detected defect from inspection scans with the corresponding simulated repair blend and relevant engineering rules, then visualizing it on a 3D model. This manual process is time-consuming, prone to interpretation errors, and makes it difficult to get a holistic view of component health. It hinders rapid decision-making for repairs and maintenance, and limits our ability to perform advanced, fleet-wide analysis.

What We Are Doing (Our Solution)
To address this, we've developed the IBR Distress Defect Localization Ontology and Knowledge Graph pilot. We've built a formal data structure – an ontology – using robust foundations like Basic Formal Ontology (BFO) and aligned it with enterprise standards like the RTX Enterprise Ontology (REO).
Using this ontology, we automatically convert and integrate the diverse data: the CSV inspection measurements, the JSON repair specifications generated by the EagleBlend simulation services related to edge or tip blends using finite element morphing techniques, and the text-based engineering rules. We transform it all into a standardized, interconnected semantic knowledge Graph using open-source tools like Apache Jena and Protege.
Crucially, we co-developed this with PW stakeholders, training 28 personnel concurrently to ensure the solution meets real needs and builds internal capability.

The Output of What We Do
What does this enable? Here is our demonstration interface loading the standard 3D airfoil model.
Using the Knowledge Graph, we query for defects on this airfoil. The system instantly retrieves the defect ID, its precise location from inspection data, its dimensions like length and depth
and critically, it retrieves the associated repair blend information directly from the EagleBlend simulation results, such as the calculated fillet radius or blend length for that specific defect. All this previously siloed information – the defect reality and the simulated repair solution – is now integrated and visualized contextually on the 3D model and in the data table.
Engineers can now ask questions that bridge these data sources: 'Show me all defects measured from the tip that require an Edge Blend with a blend ratio greater than X,' and get immediate, reliable answers.
The Value of Our Output
The value of integrating inspection and simulation data via this Knowledge Graph is clear:
•	Unified View: Breaks down silos between inspection (what is wrong) and simulation (how to potentially fix it). Provides a single source of truth.
•	Enhanced Efficiency: Reduces manual data correlation, speeding up the defect review and repair planning process.
•	Improved Decision Support: Engineers make faster, more accurate decisions with confidence, having the defect details and the corresponding engineered blend solution side-by-side.
•	Reduced Risk & Validated Approach: This pilot proves the methodology for unifying diverse data such as inspection scans, simulation outputs, rules) using semantic technologies and REO standards, de-risking larger initiatives.
•	Capability Built: Provides validated methods, initial artifacts, and trained personnel to accelerate future KG deployments.


