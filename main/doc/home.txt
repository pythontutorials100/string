Slide Title

Agent Ontology: Modeling People, Organizations, and Their Roles in Jet Engine Manufacturing
Key Concepts

    Agent: Top-level class representing:
        Individual Agents (e.g., Person)
        Organizational Agents (e.g., Manufacturer, Supplier, Subsidiary)
    Qualities: Attributes of agents (e.g., HEIGHT, WEIGHT, SECURITY CLEARANCE)
    Roles: Context-specific functions or duties (e.g., ENGINE TECHNICIAN ROLE, SUPERVISOR ROLE, QUALITY INSPECTOR ROLE)

Why It Matters (in Aerospace Manufacturing)

    Capture who performs which tasks on the production line (technicians, inspectors, managers).
    Link employees’ roles and certifications to the organization (e.g., a specific jet-engine manufacturer).
    Enable consistent representation of people and teams, ensuring clarity in big projects (e.g., new jet-engine design rollout).

Example 1: Agents in Organizational Context

Imagine a Production Technician working at Jet Engines Inc. to assemble a new X-2000 turbofan engine.

    Person 1 (e.g., “Jane Smith”)
        Has an Occupation Role = Production Technician Role
    Jet Engines Inc. (an Organization)
        Linked to the technician’s role via has organizational context

Key CCO Concepts & Relations

person 1  --has role--> production technician role 1
production technician role 1  --has organizational context--> jet engines inc.

Name Representation

    person name 1 (a Designative Information Content Entity) -> “Jane Smith”
    organization name 1 -> “Jet Engines Inc.”

Visual: (Slide diagram)

    Show a Person box, linked by “has role” arrow to Production Technician Role, which in turn links by “has organizational context” arrow to Jet Engines Inc..
    Each name uses “Designative Information Content Entity” and an “Information Bearing Entity” holding the text value (e.g., “Jane Smith”).

Example 2: Agents in a Test Event

Now consider Engine Acceptance Testing, where technicians and the quality department participate in a multi-day process:

    Person 1 = “Jane Smith”
        agent in → Engine Acceptance Test Event
        She holds the Quality Inspector Role (at some points) or remains a Production Technician (multiple roles over time).

    Manufacturer Organization = “Jet Engines Inc.”
        Also participates in the test event (as the responsible entity).

    Engine Acceptance Test Event
        Occurs over a multi-day temporal interval
        Has sub-processes (e.g., “Day 1: Visual Inspection”, “Day 2: Performance Bench Test”)

Key Relations

person 1  --agent in--> engine acceptance test event 1
engine acceptance test event 1  --occurs on--> multi-day temporal interval 1

Name Representation

    The day or date (e.g., “2025-06-12”) can be stored as a literal value within a Designative Information Content Entity (for the temporal interval).

Takeaways

    Clear Separation of Entities: A Person is distinct from her Role and from the Organization.
    Reusable: The same pattern can capture technicians, inspectors, managers, etc., each with different roles.
    Extensible: Tie into other CCO modules (Time Ontology, Event Ontology) to represent when a role is active and which events the agent participates in.


=======================================


Slide Title

Quality Ontology: Modeling Attributes and Measurements
Overview

    The Quality Ontology provides a way to represent attributes (e.g., weight, shape, temperature) of agents, artifacts, and events.
    These attributes depend on other entities (their bearers).
    Content extends from BFO’s QUALITY, REALIZABLE ENTITY (dispositions, roles), and PROCESS PROFILE (e.g., speed, frequency).

Key Classes & Examples

    Quality: Basic attribute (e.g., Weight, Temperature, Shape Quality).
    Realizable Entity: Attributes that are realized in processes, such as Magnetism, Vulnerability, Function.
    Process Profile: Attributes of a process over time, e.g., Speed, Frequency.

Slide Title

Quality Ontology in Aerospace Manufacturing
Example 1: Weight of a Jet Engine Component

Imagine a high-pressure turbine blade that has a precise mass requirement.

    Turbine Blade (an artifact)
        has quality → Blade Weight
    Blade Weight (Weight)
        is measured by → Blade Weight Measurement (an Information Content Entity)
    Measurement Pattern
        The measurement generically depends on an Information Bearing Entity (e.g., a digital record), which holds:
            has_integer_value → 2450
            uses measurement unit → Gram Measurement Unit (subclass of Measurement Unit of Mass)

Key Triples (simplified):

turbine blade 1 - has quality -> weight 1
weight 1 - is measured by -> weight measurement ICE 1
weight measurement ICE 1 - generically depends on -> info bearing entity 1
info bearing entity 1 - has_integer_value -> 2450
info bearing entity 1 - uses measurement unit -> Gram Measurement Unit

Why It Matters

    Ensures consistent representation of how data is stored (e.g., grams vs. pounds).
    Simplifies queries that compare or calculate mass values across different units.

Slide Title

Process Profiles: Speed & Frequency
Example 2: Testing Engine Rotation Speed

    Engine Spin-Up Process
        A test procedure in which the engine is spun up to a certain RPM.
    Speed (a subclass of Process Profile)
        is measured by → e.g., “Rotation Speed Info Entity”
        That info entity depends on a record with a numeric value + unit (e.g., 10,000 RPM).

Key Triples:

engine spin-up test 1 - has profile -> speed 1
speed 1 - is measured by -> speed measurement ICE 1
speed measurement ICE 1 - generically depends on -> info bearing entity 1
info bearing entity 1 - has_integer_value -> 10000
info bearing entity 1 - uses measurement unit -> RPM Unit

Benefits

    Cleanly represents changing attributes over time (e.g., speed ramping from 0 to 10,000 RPM).
    Aligns with other CCO modules (Time Ontology, Event Ontology) to capture when certain threshold speeds are reached.

Slide Title

Key Takeaways from the Quality Ontology

    Attributes Depend on a Bearer
        Weight, Temperature, Speed are always qualities of something else (person, artifact, or process).
    Tight Integration with Measurement
        Each quality can be linked to a Measurement Information Content Entity for numeric data (with units).
    Flexible & Extensible
        Capture domain-specific qualities (e.g., Thrust, Vibration Frequency) by subclassing.
    Crucial for Aerospace
        Precise specs (mass, speed, temperature) are vital for safety, performance, and compliance.

Additional Note

    The Quality Ontology is most powerful in combination with other CCO modules (Agent, Artifact, Event, Time).
    Enables interoperable, real-world data modeling for complex aerospace scenarios, ensuring consistent, query-friendly representations of critical attributes (weight, speed, temperature, etc.).

Use these slides to demonstrate how the Quality Ontology helps track and measure important attributes in jet engine manufacturing, from blade weight to rotational speed of spinning parts, all while maintaining semantic clarity and unit consistency.

    Key Benefit: By leveraging CCO’s Agent Ontology patterns, jet-engine manufacturers avoid reinventing the wheel for modeling workforce structure, roles, and organizational contexts—leading to more consistent, interoperable data across production, inspection, and testing activities.
